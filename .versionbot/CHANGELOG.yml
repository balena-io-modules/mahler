- commits:
    - subject: Refactor agent, split into multiple files
      hash: c96373e2ddcc06ac40aa3256f682667beab1bde0
      body: |
        This moves the runtime behavior of the agent to a `Runtime` class, now
        under `lib/agent/runtime.ts`, making the code easier to read. The agent
        interface definition is now under `lib/agent/index.ts`

        This also modifies the behavior of the agent from polling to being
        influenced by sensors. Configuring an agent with `follow` true, means
        that new state changes coming from sensors will trigger re-plans to
        check if the state has gone off-target.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
  version: 0.7.0
  title: ""
  date: 2023-05-09T15:56:29.374Z
- commits:
    - subject: Make task description default to the id
      hash: 65a5962d02648e1e725320d737e1288abe8ffe9e
      body: |
        Also add some additional loging in unit tests.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
    - subject: Simplify task interface and remove unused code
      hash: 30687ff9cb1164501d25c57cd154e95058fd083a
      body: |
        This removes path and target from `Instance` interface in `task.ts` in
        favour of comparing by an id generated as a sha256 hash of the grounded
        task info. This simplifies the interface and makes comparison easier,
        removing the need for the `json.ts` utils module
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
  version: 0.6.0
  title: ""
  date: 2023-05-05T23:34:56.128Z
- commits:
    - subject: Allow providing a planner instance to Agent init
      hash: 7b7a7685488dc74ea7c2af8df343c1572f0cebf1
      body: |
        This allows custom planners to be given to an agent instance.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
  version: 0.5.0
  title: ""
  date: 2023-05-05T22:11:30.730Z
- commits:
    - subject: Improve plan search trace logic
      hash: 0c84a620f554d8d170bd5512df79102122f3e16a
      body: |
        Trace is now given an object with the state of the search. Loggers are
        welcome to parse the object as they see fit.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Refactor findPlan function of planne for readability
      hash: bd76a0e2d6e5157fc475f0a7d7db59570fb3c46b
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Refactor planner to return a result object
      hash: cab7ca51f7d4dbe143b238ca54a6a879b9796c87
      body: |
        The object now also returns planner stats, which can be used
        to benchmark changes in the knowledge based
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
    - subject: Rename Planner.plan to Planner.find
      hash: 3b6b2a9c5f7d2f4f8773949dad18413e6cf41060
      body: ""
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
    - subject: Make debug module a dev dependency
      hash: e1209d5773b5f7047708a5d687c1e4b4186099c1
      body: |
        Agent now receives a partial logger, where missing functions will be
        replaced by the defaults in NullLogger. The debug module is only used
        for tests
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Simplify PlanNotFound error
      hash: cf6505d2d259f9c6cc6226fabba9a79d7f4bed8c
      body: |
        Remove the `unnapplied` property as it wasn't that useful.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Allow passing a debugging function to the planner
      hash: 55b22a7eb6390291a8e61a9166d780faac60aef2
      body: |
        This allows to debug the plan search during development and identify
        bugs in the task definitions
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
  version: 0.4.0
  title: ""
  date: 2023-05-05T19:55:31.113Z
- commits:
    - subject: Change '*' to 'update' as default task operation
      hash: 8bd9f3a49f6c5289529d07555c38ee30984118f1
      body: |
        After creating the applicability table between tasks and state
        operations, it became clear that these two values had the same effect,
        so '*' was removed for simplicity
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
  version: 0.3.0
  title: ""
  date: 2023-04-29T17:37:55.595Z
- commits:
    - subject: Add updating tasks to container composer tests
      hash: fc4f66364b2dd37fa2496bf8c3d3fa844f067ec5
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Add debugging to planning function
      hash: 266cc987f292d27fe60d7425686786196116f1da
      body: |
        This helps debug reasons for planning failure
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
    - subject: Calculate the target before planning
      hash: 95167c187444815866dd199ca11b741e1e5a7e54
      body: |
        The target state was being calculated at each planning state, allowing
        effects to leech into next iterations of the plan via the target.

        This now calculates the target state only at the beginning, when the
        current state comes from the actual system state. While this is still
        not perfect, as the target may end up containing stuff that we really
        might not want in the final state (think a container re-start, where
        we don't care about the final containerId), the target at least is
        calculated from real data
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Split service tasks into install and start
      hash: 3891cf7f209d5743b015cb78558b6324839aafc8
      body: |
        This allows to handle more granular scenarios, for instance, that the
        service stopped on error and we want it to be restarted.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Rename docker-compose test to container-compose
      hash: f61c4ed63a4da024bae52ae12bf5b3599ba3a35d
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
  version: 0.2.0
  title: ""
  date: 2023-04-29T00:59:58.877Z
- commits:
    - subject: Add service to docker-compose to enable flowzone testing
      hash: 8422902ede14e359c4394ef27083325ed2b13172
      body: |
        Also set the logging level for tests
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Move default logger to its own module
      hash: 1f3a0914665fcdd0d6fd9679ffa94d36cfa6f851
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
    - subject: Setup flowzone
      hash: 6962d09ab00e6f191c3eeec535450d996f336ed7
      body: |
        Set the change to minor so the first published version is 0.1.0
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
    - subject: Update package.json with repository metadata
      hash: 4fd6666505c812583d4732e357448b0d61b33db2
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
  version: 0.1.0
  title: ""
  date: 2023-04-24T22:22:00.390Z
